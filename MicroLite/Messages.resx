<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ConnectionManager_ArgumentsCountMismatch" xml:space="preserve">
    <value>There are [{0}] parameters in the SQL statement, however only [{1}] parameter arguments were specified.</value>
  </data>
  <data name="AssignedListener_IdentifierNotSetForInsert" xml:space="preserve">
    <value>The object does not have an identifier value set so it cannot be inserted</value>
  </data>
  <data name="FluentConfiguration_ConnectionNotFound" xml:space="preserve">
    <value>No connection was found in the app.config with the name [{0}]</value>
  </data>
  <data name="FluentConfiguration_CreatingSessionFactory" xml:space="preserve">
    <value>Creating a session factory for connection named [{0}]</value>
  </data>
  <data name="FluentConfiguration_ProviderNotSupported" xml:space="preserve">
    <value>The provider [{0}] is currently not supported by the MicroLite ORM framework</value>
  </data>
  <data name="FluentConfiguration_ReadingConnection" xml:space="preserve">
    <value>Reading connection named [{0}] from app.config</value>
  </data>
  <data name="IdentityListener_IdentifierSetForInsert" xml:space="preserve">
    <value>The object already has an identifier value so it cannot be inserted using the Identity strategy</value>
  </data>
  <data name="IListener_IdentifierNotSetForUpdate" xml:space="preserve">
    <value>The object does not have an identifier value set so it cannot be updated</value>
  </data>
  <data name="IListener_SettingIdentifierValue" xml:space="preserve">
    <value>Setting the identifier value for an instance of the type [{0}] to [{1}]</value>
  </data>
  <data name="Session_MustHaveAtLeast1Result" xml:space="preserve">
    <value>There must be at least 1 result per page</value>
  </data>
  <data name="ObjectBuilder_CreatingInstance" xml:space="preserve">
    <value>Creating a new instance of [{0}]</value>
  </data>
  <data name="ObjectBuilder_SettingPropertyValue" xml:space="preserve">
    <value>Setting the property value of [{0}].[{1}]</value>
  </data>
  <data name="ObjectBuilder_UnknownProperty" xml:space="preserve">
    <value>The type [{0}] does not have a mapped property with the name [{1}]</value>
  </data>
  <data name="ObjectInfo_CreatingObjectInfo" xml:space="preserve">
    <value>Creating ObjectInfo for [{0}]</value>
  </data>
  <data name="ObjectInfo_MappingTypeToTable" xml:space="preserve">
    <value>Mapping the type [{0}] to the table [{1}].[{2}]</value>
  </data>
  <data name="ObjectInfo_MappingColumnToProperty" xml:space="preserve">
    <value>Mapping the property [{0}].[{1}] to the column [{2}]</value>
  </data>
  <data name="ObjectInfo_RetrievingObjectInfo" xml:space="preserve">
    <value>Retrieving ObjectInfo for [{0}]</value>
  </data>
  <data name="Session_PagesStartAtOne" xml:space="preserve">
    <value>The first page which can be requested is page 1</value>
  </data>
  <data name="SessionFactory_CreatingSession" xml:space="preserve">
    <value>Creating a new session</value>
  </data>
  <data name="Session_ClosingConnection" xml:space="preserve">
    <value>Session [{0}] closing database connection</value>
  </data>
  <data name="Session_Created" xml:space="preserve">
    <value>Session [{0}] created</value>
  </data>
  <data name="Session_Disposed" xml:space="preserve">
    <value>Session [{0}] disposed</value>
  </data>
  <data name="Session_OpeningConnection" xml:space="preserve">
    <value>Session [{0}] opening database connection</value>
  </data>
  <data name="AttributeMappingConvention_IgnoringProperty" xml:space="preserve">
    <value>Ignoring [{0}].[{1}] as it has no ColumnAttribute</value>
  </data>
  <data name="AttributeMappingConvention_NoTableAttribute" xml:space="preserve">
    <value>The type [{0}] is not decorated with a TableAttribute</value>
  </data>
  <data name="TableInfo_NoIdentifierColumn" xml:space="preserve">
    <value>No ColumnInfo was specified with IsIdentifier set to true</value>
  </data>
  <data name="Transaction_Committing" xml:space="preserve">
    <value>Transaction [{0}] committing changes</value>
  </data>
  <data name="Transaction_Created" xml:space="preserve">
    <value>Transaction [{0}] created</value>
  </data>
  <data name="Transaction_Disposed" xml:space="preserve">
    <value>Transaction [{0}] disposed</value>
  </data>
  <data name="Transaction_DisposedUncommitted" xml:space="preserve">
    <value>Transaction [{0}] is being disposed with uncommitted changes</value>
  </data>
  <data name="Transaction_EnlistingCommand" xml:space="preserve">
    <value>Command enlisted in transaction [{0}]</value>
  </data>
  <data name="Transaction_RollingBack" xml:space="preserve">
    <value>Transaction [{0}] rolling back changes</value>
  </data>
  <data name="ObjectInfo_TypeMustBeClass" xml:space="preserve">
    <value>The type [{0}] is not a class and therefore cannot be used by the MicroLite ORM Framework</value>
  </data>
  <data name="ObjectInfo_TypeMustHaveDefaultConstructor" xml:space="preserve">
    <value>The type [{0}] has no default (parameterless) constructor and therefore cannot be used by the MicroLite ORM Framework</value>
  </data>
  <data name="ObjectInfo_TypeMustNotBeAbstract" xml:space="preserve">
    <value>The type [{0}] is abstract and therefore cannot be used by the MicroLite ORM Framework</value>
  </data>
  <data name="TableInfo_ColumnMappedMultipleTimes" xml:space="preserve">
    <value>The column [{0}] has been mapped multiple times, this usually occurs if multiple properties have the same column name specified in the column attribute.</value>
  </data>
  <data name="ConfigureExtensions_UsingLogger" xml:space="preserve">
    <value>Using logger [{0}].</value>
  </data>
  <data name="ConfigureExtensions_UsingMappingConvention" xml:space="preserve">
    <value>Using mapping convention [{0}]</value>
  </data>
  <data name="Transaction_Committed" xml:space="preserve">
    <value>Transaction [{0}] committed changes</value>
  </data>
  <data name="Transaction_RolledBack" xml:space="preserve">
    <value>Transaction [{0}] rolled back changes</value>
  </data>
  <data name="Transaction_Completed" xml:space="preserve">
    <value>Transaction [{0}] has been completed</value>
  </data>
</root>